<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.movie.smallbox.dao.ReservationDao">

<insert id="insertReservation" parameterType="list">
    INSERT INTO reservation(userId, movieTitle, theaterName, scheduleTime, seatNumber, movieId)
    VALUES
    <foreach collection="reservations" item="reservation" separator=",">
        (#{reservation.userId}, #{reservation.movieTitle}, #{reservation.theaterName}, #{reservation.scheduleTime}, #{reservation.seatNumbers[0]}, #{reservation.movieId})
    </foreach>
</insert>

<select id="getReservation" parameterType="int" resultType="Reservation">
    SELECT MIN(reservationId) AS reservationId, userId, movieTitle, theaterName, scheduleTime,
           GROUP_CONCAT(seatNumber ORDER BY seatNumber ASC) AS seatNumbersStr, bookingTime, movieId
    FROM reservation
    WHERE userId = #{userId}
    GROUP BY bookingTime, movieTitle, theaterName, scheduleTime, userId, movieId
    ORDER BY bookingTime DESC
</select>

<select id="isSeatBooked" parameterType="map" resultType="int">
    SELECT count(*) FROM reservation
    WHERE theaterName = #{theaterName}
    AND scheduleTime = #{scheduleTime}
    AND seatNumber = #{seatNumber}
</select>

<select id="getBookedSeats" parameterType="map" resultType="string">
    SELECT seatNumber FROM reservation
    WHERE theaterName = #{theaterName}
    AND scheduleTime = #{scheduleTime}
</select>


<!-- 예약 취소 -->
<!-- 그룹화된 예약 취소 -->
<delete id="cancelGroupReservation" parameterType="map">
	DELETE FROM reservation
	WHERE userId = #{userId}
	AND movieTitle = #{movieTitle}
	AND theaterName = #{theaterName}
	AND scheduleTime = #{scheduleTime}
	AND bookingTime = #{bookingTime}
</delete>
<!-- 예약 ID로 예약 정보 조회 -->
<select id="getReservationById" parameterType="int" resultType="Reservation">
    SELECT * FROM reservation
    WHERE reservationId = #{reservationId}
</select>

</mapper>